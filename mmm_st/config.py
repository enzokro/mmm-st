# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_config.ipynb.

# %% auto 0
__all__ = ['config', 'Config']

# %% ../nbs/03_config.ipynb 2
import json
import os

# %% ../nbs/03_config.ipynb 3
config = {
  "tfm_type": "regular",
  "models": {
    # "image_to_image": "kandinsky-community/kandinsky-2-2-decoder",
    "image_to_image": "runwayml/stable-diffusion-v1-5",
    "control_net_canny": "lllyasviel/sd-controlnet-canny",
    "control_net_pose": "fusing/stable-diffusion-v1-5-controlnet-openpose",
    "stable_diffusion": "runwayml/stable-diffusion-v1-5",
    "pose_det_model": "lllyasviel/ControlNet",
  },
  "app_settings": {
    "threshold": 0.6,
    "num_valid_frames": 15,
    "targets": ["person", "cat"],
    "host": "localhost",
    "port": 8989
  },
  "cap_props": {
    "CAP_PROP_FPS": 15
  }
}


class Config:
    """
    Configuration for the application, loaded from a JSON file.
    """
    # # Load configuration from a JSON file
    # with open('config.json', 'r') as config_file:
    #     config = json.load(config_file)

    # Models configuration
    TRANSFORM_TYPE = config['tfm_type']
    MODEL_NAME = config['models']['image_to_image']
    CONTROL_NET_CANNY_MODEL = config['models']['control_net_canny']
    CONTROL_NET_POSE_MODEL = config['models']['control_net_pose']
    STABLE_DIFFUSION_MODEL = config['models']['stable_diffusion']
    POSE_DET_MODEL = config['models']['pose_det_model']

    # Application settings
    HOST = os.environ.get('HOST', config['app_settings']['host'])
    PORT = int(os.environ.get('PORT', config['app_settings']['port']))
    DETECTION_URL = f'http://{HOST}:{PORT}/detections'

    # Camera stream properties
    CAP_PROPS = config['cap_props']
